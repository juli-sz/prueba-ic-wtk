name: deploy-release

on:
  workflow_run:
    workflows: ["ci-release"]  # Nombre exacto del workflow anterior
    types:
      - completed

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest

    steps:
      - name: Clonar c√≥digo
        uses: actions/checkout@v4

      - name: Configurar GitHub Pages
        uses: actions/configure-pages@v5

      - name: Build del sitio Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Subir artifact a Pages
        uses: actions/upload-pages-artifact@v3

      - name: Desplegar a GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

  notify:
    name: Notificar a Slack
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notificar estado de despliegue
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data '{"text":"‚úÖ *Deploy a GitHub Pages exitoso* para `release`. ¬°Todo sali√≥ bien! üöÄ"}' \
              ${{ secrets.SLACK_WEBHOOK_URL }}
          else
            curl -X POST -H 'Content-type: application/json' \
              --data '{"text":"‚ùå *Fall√≥ el deploy a GitHub Pages* para `release`. Revisar errores üòì"}' \
              ${{ secrets.SLACK_WEBHOOK_URL }}
